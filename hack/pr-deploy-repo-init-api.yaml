apiVersion: template.openshift.io/v1
kind: Template
parameters:
- description: The PR to deploy from.
  name: PULL_REQUEST
  required: true
- description: The fork to deploy from.
  name: USER
  required: true
- description: The branch to deploy from.
  name: BRANCH
  required: true
- description: The GitHub token.
  name: GH_TOKEN
  required: true
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: ci-tools-${PULL_REQUEST}
    annotations:
      ci.openshift.io/ttl.hard: 48h0m0s
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    namespace: ci-tools-${PULL_REQUEST}
    name: output
  spec:
    lookupPolicy:
      local: true
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: repo-init-api
    namespace: ci-tools-${PULL_REQUEST}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "output:repo-init-api"
    source:
      dockerfile: |
        FROM registry.ci.openshift.org/openshift/release:golang-1.16
        RUN yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.9-1.x86_64.rpm
        RUN yum install -y git && \
            yum clean all && \
            rm -rf /var/cache/yum

        COPY . .
        RUN go install ./cmd/repo-init/
      git:
        ref: ${BRANCH}
        uri: https://github.com/${USER}/ci-tools.git
      contextDir: ./
      type: Git
    strategy:
      dockerStrategy:
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - type: ConfigChange
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: repo-init-config
    namespace: ci-tools-${PULL_REQUEST}
  data:
    github-client-id: 17f52c54bd261f4780d8
    github-redirect-uri: https://repo-init-ui-ci-tools-2420.apps.ci.l2s4.p1.openshiftapps.com/login
- apiVersion: v1
  kind: Secret
  metadata:
    name: repo-init
    namespace: ci-tools-${PULL_REQUEST}
  type: Opaque
  stringData:
    github-client-secret: f1000e2d5857988a1c1d65daa1521b87ead33ee8
- apiVersion: v1
  kind: Secret
  metadata:
    name: github-credentials-openshift-bot
    namespace: ci-tools-${PULL_REQUEST}
  type: Opaque
  stringData:
    oauth: ${GH_TOKEN}
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ci-tools-${PULL_REQUEST}
    labels:
      app: repo-init-api
    name: repo-init-api
  spec:
    ports:
      - name: api
        port: 80
        protocol: TCP
        targetPort: 8080
    selector:
      app: repo-init-api
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
    name: repo-init-api
    namespace: ci-tools-${PULL_REQUEST}
  spec:
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    port:
      targetPort: api
    to:
      kind: Service
      name: repo-init-api
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    namespace: ci-tools-${PULL_REQUEST}
    name: repo-init-api
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"output:repo-init-api"},"fieldPath":"spec.template.spec.containers[?(@.name==\"repo-init-api\")].image"}]'
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: repo-init-api
    template:
      metadata:
        labels:
          app: repo-init-api
      spec:
        volumes:
        - name: token
          secret:
            secretName: github-credentials-openshift-bot
        - name: repo-init-config
          projected:
            sources:
            - secret:
                name: repo-init
                items:
                  - key: github-client-secret
                    path: github-client-secret
            - configMap:
                name: repo-init-config
        containers:
          - name: repo-init-api
            image: "output:repo-init-api"
            imagePullPolicy: Always
            command:
              - /go/bin/repo-init
              - -loglevel=debug
              - -mode=api
              - -port=8080
              - -github-token-path=/etc/github/oauth
              - -github-endpoint=https://api.github.com
              - -num-repos=4
              - -server-config-path=/etc/repo-init-config
              - -disable-cors
            resources:
              requests:
                memory: "2Gi"
                cpu: "500m"
              limits:
                memory: "4Gi"
            ports:
              - name: api
                containerPort: 8080
            volumeMounts:
              - mountPath: /etc/github
                name: token
                readOnly: true
              - mountPath: /etc/repo-init-config
                name: repo-init-config
                readOnly: true