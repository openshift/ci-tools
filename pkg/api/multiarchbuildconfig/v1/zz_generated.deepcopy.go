//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	buildv1 "github.com/openshift/api/build/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiArchBuildConfig) DeepCopyInto(out *MultiArchBuildConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiArchBuildConfig.
func (in *MultiArchBuildConfig) DeepCopy() *MultiArchBuildConfig {
	if in == nil {
		return nil
	}
	out := new(MultiArchBuildConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiArchBuildConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiArchBuildConfigList) DeepCopyInto(out *MultiArchBuildConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MultiArchBuildConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiArchBuildConfigList.
func (in *MultiArchBuildConfigList) DeepCopy() *MultiArchBuildConfigList {
	if in == nil {
		return nil
	}
	out := new(MultiArchBuildConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiArchBuildConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiArchBuildConfigSpec) DeepCopyInto(out *MultiArchBuildConfigSpec) {
	*out = *in
	in.BuildSpec.DeepCopyInto(&out.BuildSpec)
	if in.ExternalRegistries != nil {
		in, out := &in.ExternalRegistries, &out.ExternalRegistries
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiArchBuildConfigSpec.
func (in *MultiArchBuildConfigSpec) DeepCopy() *MultiArchBuildConfigSpec {
	if in == nil {
		return nil
	}
	out := new(MultiArchBuildConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiArchBuildConfigStatus) DeepCopyInto(out *MultiArchBuildConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Builds != nil {
		in, out := &in.Builds, &out.Builds
		*out = make(map[string]*buildv1.Build, len(*in))
		for key, val := range *in {
			var outVal *buildv1.Build
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(buildv1.Build)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiArchBuildConfigStatus.
func (in *MultiArchBuildConfigStatus) DeepCopy() *MultiArchBuildConfigStatus {
	if in == nil {
		return nil
	}
	out := new(MultiArchBuildConfigStatus)
	in.DeepCopyInto(out)
	return out
}
