presubmits:
  super/duper:
  - agent: kubernetes
    always_run: true
    branches:
    - ^cluster-profile$
    - ^cluster-profile-
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci.openshift.io/generator: prowgen
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-cluster-profile-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-credentials-file=/etc/report/credentials
        - --target=[images]
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /secrets/manifest-tool
          name: manifest-tool-local-pusher
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: manifest-tool-local-pusher
        secret:
          secretName: manifest-tool-local-pusher
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - cluster-profile
    context: ci/prow/test-profile
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-cluster-profile-test-profile
    rerun_command: /test test-profile
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --target=test-profile
        - --template=/usr/local/test-profile
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: JOB_NAME_SAFE
          value: test-profile
        - name: TEST_COMMAND
          value: make test
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/test-profile
          name: job-definition
          subPath: test-template.yaml
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?test-profile(?: .*?)?$'
