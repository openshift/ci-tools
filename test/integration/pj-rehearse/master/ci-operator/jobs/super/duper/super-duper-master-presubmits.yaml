presubmits:
  super/duper:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/cmd
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-cmd
    rerun_command: /test cmd
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --target=cmd
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| cmd),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-e2e-aws
    rerun_command: /test e2e-aws
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - ^master$
    - ^master-
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-credentials-file=/etc/report/credentials
        - --target=[images]
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/integration
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-integration
    rerun_command: /test integration
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --target=integration
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| integration),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/test-template-e2e-aws
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-test-template-e2e-aws
    rerun_command: /test test-template-e2e-aws
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: test-template.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| test-template-e2e-aws),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/test-template-e2e-openstack
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-test-template-e2e-openstack
    rerun_command: /test test-template-e2e-openstack
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws-openstack
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: openstack
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-openstack-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-openstack
          name: job-definition
          subPath: test-template.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-openstack
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| test-template-e2e-openstack),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-super-duper-master-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_gssapi
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_gssapi
    rerun_command: /test extended_gssapi
    trigger: ((?m)^/test extended_gssapi,?(\s+|$))
