presubmits:
  super/duper:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-e2e
    rerun_command: /test e2e
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --secret-dir=/usr/local/e2e-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e
        - --template=/usr/local/e2e
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: JOB_NAME_SAFE
          value: e2e
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: make e2e
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /usr/local/e2e-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-random
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-e2e-random
    rerun_command: /test e2e-random
    spec:
      containers:
      - args:
        - -c
        - |
          set -eux
          target=$(awk < /usr/local/e2e-targets \
              --assign "r=$RANDOM" \
              'BEGIN { r /= 32767 } (r -= $1) <= 0 { print $2; exit }')
          case "$target" in
              aws) template=e2e; CLUSTER_TYPE=aws;;
              azure) template=e2e; CLUSTER_TYPE=azure4;;
              aws-upi) template=upi-e2e; CLUSTER_TYPE=aws;;
              vsphere) template=upi-e2e; CLUSTER_TYPE=vsphere;;
              *) echo >&2 "invalid target $target"; exit 1 ;;
          esac
          ln -s "/usr/local/job-definition/cluster-launch-installer-$template.yaml" /tmp/e2e-random
          ln -s "/usr/local/cluster-profiles/$CLUSTER_TYPE" /tmp/e2e-random-cluster-profile
          export CLUSTER_TYPE
          exec ci-operator \
              --artifact-dir=$(ARTIFACTS) \
              --give-pr-author-access-to-namespace=true \
              --secret-dir=/tmp/e2e-random-cluster-profile \
              --sentry-dsn-path=/etc/sentry-dsn/ci-operator \
              --target=e2e-random \
              --template=/tmp/e2e-random
        command:
        - bash
        env:
        - name: JOB_NAME_SAFE
          value: e2e-random
        - name: TEST_COMMAND
          value: make e2e
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /usr/local/cluster-profiles/aws
          name: cluster-profile-aws
        - mountPath: /usr/local/cluster-profiles/azure4
          name: cluster-profile-azure4
        - mountPath: /usr/local/cluster-profiles/vsphere
          name: cluster-profile-vsphere
        - mountPath: /usr/local/e2e-targets
          name: e2e-targets
          subPath: e2e-targets
        - mountPath: /usr/local/job-definition
          name: job-definition
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: cluster-profile-aws
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - name: cluster-profile-azure4
        projected:
          sources:
          - secret:
              name: cluster-secrets-azure4
      - name: cluster-profile-vsphere
        projected:
          sources:
          - secret:
              name: cluster-secrets-vsphere
      - configMap:
          name: e2e-targets
        name: e2e-targets
      - name: job-definition
        projected:
          sources:
          - configMap:
              name: prow-job-cluster-launch-installer-e2e
          - configMap:
              name: prow-job-cluster-launch-installer-upi-e2e
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-random,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    max_concurrency: 100
    name: pull-ci-super-duper-master-images
    optional: true
    rerun_command: /test images
    run_if_changed: changes
    skip_report: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: jenkins
    always_run: true
    branches:
    - master
    context: ci/openshift-jenkins/legacy
    labels:
      master: ci.openshift.redhat.com
    name: pull-ci-super-duper-master-legacy
    rerun_command: /test legacy
    trigger: ((?m)^/test( all| legacy),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/lint
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-lint
    rerun_command: /test lint
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=lint
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )lint,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=unit
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )unit,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/variant-images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      ci-operator.openshift.io/variant: variant
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-variant-images
    path_alias: whoa.com/super/duper
    rerun_command: /test variant-images
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=[images]
        - --target=[release:latest]
        - --variant=variant
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )variant-images,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/variant-unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      ci-operator.openshift.io/variant: variant
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-super-duper-master-variant-unit
    path_alias: whoa.com/super/duper
    rerun_command: /test variant-unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --org=super
        - --repo=duper
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=unit
        - --variant=variant
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )variant-unit,?($|\s.*)
  - agent: jenkins
    always_run: true
    context: ci/openshift-jenkins/oldschool
    labels:
      master: ci.openshift.redhat.com
    name: pull-ci-super-duper-oldschool
    rerun_command: /test oldschool
    trigger: ((?m)^/test( all| oldschool),?(\s+|$))
